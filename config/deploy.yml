# Name of your application. Used to uniquely configure containers.
service: single-server-kamal-test-app

# Name of the container image.
image: tonysm/single-server-kamal-test-app

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: tonysm

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  clear:
    APP_NAME: "Kamal Test App"
    APP_ENV: "production"
    APP_DEBUG: false
    APP_URL: "http://laravel-kamal-test.com"
    ASSET_URL: "http://laravel-kamal-test.com"
    LOG_CHANNEL: "stderr"
    LOG_DEPRECATIONS_CHANNEL: "null"
    LOG_LEVEL: "debug"
    MAIL_MAILER: "log"
    BROADCAST_DRIVER: "log"
    FILESYSTEM_DISK: "local"
    QUEUE_CONNECTION: "sync"
    SESSION_DRIVER: "file"
    SESSION_LIFETIME: "120"
  secret:
    - APP_KEY
    - DATABASE_URL
    - REDIS_URL

builder:
  multiarch: false

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: mysql:8.0
    roles:
      - db
    port: 3306
    env:
      clear:
        MYSQL_ROOT_HOST: '%'
        MYSQL_DATABASE: 'kamalapp'
      secret:
        - MYSQL_ROOT_PASSWORD
    files:
      # - config/mysql/production.cnf:/etc/mysql/my.cnf
      # - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/mysql
  redis:
    image: redis:7.0
    roles:
      - db
    port: 6379
    directories:
      - data:/data

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /up
  port: 80

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /var/www/html/public/dist

